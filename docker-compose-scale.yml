version: '3.4'

volumes:
  es-data:      # elasticsearch data
  es-data1:      # elasticsearch data
  es-data2:      # elasticsearch data
  es-data3:      # elasticsearch data
  es-data4:      # elasticsearch data
  es-data5:      # elasticsearch data
  json-data: # suricata json input
  rules-data: # scirius rules

networks:
  frontend:
  backend:


x-escls: &escls
    environment:
      cluster.name: 'docker-cluster'
      bootstrap.memory_lock: 'true'
      ES_JAVA_OPTS: '-Xms512m -Xmx512m'
      discovery.zen.ping.unicast.hosts: '[elasticsearch, elasticsearch1, elasticsearch2, elasticsearch3, elasticsearch4, elasticsearch5]'
      discovery.zen.minimum_master_nodes: 3
    ulimits:
      memlock:
        soft: -1
        hard: -1

services:

  bro:
    image: tatsui/bro
    # build: ./bro
    environment:
       MODE: "quick"
       #MODE: "standard"
    volumes:
      - ./pcap:/pcap
      - ./extract_files/:/extract_files/
      - ./bro/bro_config:/bro_config
    depends_on: [ 'elasticsearch' , 'logstash', 'kafka']
    networks: ['backend']

  manager:
    image: tatsui/rpot-manager
    # build: manager
    volumes:
      - ./oneshot/kibana-dashboards:/kibana-dashboards
    depends_on: [ 'elasticsearch' , 'kibana' ,'kafka', 'logstash']
    networks: ['backend']
    command: bash -c "/entrypoint-import.sh"
    #command: bash -c "/entrypoint-export.sh"

  zookeeper:
    image: wurstmeister/zookeeper
    networks: ['backend']

  kafka:
    image: wurstmeister/kafka
    ports: [ '127.0.01:9092:9092' ]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
    depends_on: ['zookeeper']
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks: ['backend']

  logstash:
    image: tatsui/logstash-kafka-bro
    # build: logstash
    volumes:
      - ./logstash/pipeline/logstash-bro.conf:/usr/share/logstash/pipeline/logstash.conf # client -> server 
      #- ./logstash/pipeline/logstash-bro-quick.conf:/usr/share/logstash/pipeline/logstash.conf # client -> server (blacklist)
      #- ./logstash/pipeline/logstash-bro-honeypot.conf:/usr/share/logstash/pipeline/logstash.conf # server -> client
      #- ./logstash/pipeline/logstash-bro-honeypot-quick.conf:/usr/share/logstash/pipeline/logstash.conf # server -> client (blacklist)

    depends_on: [ 'elasticsearch' ,'kafka']
    environment:
      LOG_LEVEL: fatal
      ES_JAVA_OPTS: '-Xms2G -Xmx2G'
    networks: ['backend']

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.3.0
    ports: [ '5601:5601' ]
    depends_on: [ 'elasticsearch' ]
    environment:
      SERVER_NAME: kibana.docker.selks
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks: ['backend', 'frontend']

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.3.0
    volumes: [ 'es-data:/usr/share/elasticsearch/data' ]
    container_name: elasticsearch
    depends_on: [ 'elasticsearch1', 'elasticsearch2','elasticsearch3' ,'elasticsearch4', 'elasticsearch5']
    <<: *escls
    networks: ['backend']

  elasticsearch1:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.3.0
    volumes: [ 'es-data1:/usr/share/elasticsearch/data' ]
    container_name: elasticsearch1
    <<: *escls
    networks: ['backend']

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.3.0
    volumes: [ 'es-data2:/usr/share/elasticsearch/data' ]
    container_name: elasticsearch2
    <<: *escls
    networks: ['backend']

  elasticsearch3:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.3.0
    volumes: [ 'es-data3:/usr/share/elasticsearch/data' ]
    container_name: elasticsearch3
    <<: *escls
    networks: ['backend']

  elasticsearch4:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.3.0
    volumes: [ 'es-data4:/usr/share/elasticsearch/data' ]
    container_name: elasticsearch4
    <<: *escls
    networks: ['backend']

  elasticsearch5:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.3.0
    volumes: [ 'es-data5:/usr/share/elasticsearch/data' ]
    container_name: elasticsearch5
    <<: *escls
    networks: ['backend']
